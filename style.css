/*
Theme Name: _s
Theme URI: http://underscores.me/
Author: Automattic
Author URI: http://automattic.com/
Description: Hi. I'm a starter theme called <code>_s</code>, or <em>underscores</em>, if you like. I'm a theme meant for hacking so don't use me as a <em>Parent Theme</em>. Instead try turning me into the next, most awesome, WordPress theme out there. That's what I'm here for.
Version: 1.0.0
License: GNU General Public License v2 or later
License URI: http://www.gnu.org/licenses/gpl-2.0.html
Text Domain: _s
Tags: custom

This theme, like WordPress, is licensed under the GPL.

Based on Underscores http://underscores.me/, (C) 2012-2015 Automattic, Inc.

Normalizing styles have been helped along thanks to the fine work of
Bo-Yi Wu (https://github.com/appleboy/), Nicolas Gallagher (https://github.com/necolas), and Jonathan Neal (https://github.com/jonathantneal).
*/
html {
  box-sizing: border-box;
}

*, *::after, *::before {
  box-sizing: inherit;
}

body {
  -webkit-backface-visibility: hidden;
}

.animated {
  -webkit-animation-duration: 0.35s;
  animation-duration: 0.35s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

.animated.infinite {
  -webkit-animation-iteration-count: infinite;
          animation-iteration-count: infinite;
}

.animated.hinge {
  -webkit-animation-duration: 0.7s;
  animation-duration: 0.7s;
}

.animated.bounceIn, .animated.bounceOut {
  -webkit-animation-duration: 0.2625s;
  animation-duration: 0.2625s;
}

.animated.flipOutX, .animated.flipOutY {
  -webkit-animation-duration: 0.2625s;
  animation-duration: 0.2625s;
}

@-webkit-keyframes fadeInDown {
  0% {
    opacity: 0;
    -webkit-transform: translateY(-20px);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
  }
}

@keyframes fadeInDown {
  0% {
    opacity: 0;
    -webkit-transform: translateY(-20px);
            transform: translateY(-20px);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

.fadeInDown {
  -webkit-animation-name: fadeInDown;
  animation-name: fadeInDown;
}

html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

body {
  background: #ffffff;
  margin: 0;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

[hidden],
template {
  display: none;
}

a {
  background-color: transparent;
}

a:active, a:hover {
  outline: 0;
}

abbr[title] {
  border-bottom: 1px dotted;
}

b,
strong {
  font-weight: bold;
}

dfn {
  font-style: italic;
}

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

mark {
  background: #ff0;
  color: #000;
}

small {
  font-size: 80%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

img {
  border: 0;
}

svg:not(:root) {
  overflow: hidden;
}

figure {
  margin: 1em 40px;
}

hr {
  box-sizing: content-box;
  height: 0;
}

pre {
  overflow: auto;
}

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}

button {
  overflow: visible;
}

button,
select {
  text-transform: none;
}

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}

button[disabled],
html input[disabled] {
  cursor: default;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

input {
  line-height: normal;
}

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box;
}

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

legend {
  border: 0;
  padding: 0;
}

textarea {
  overflow: auto;
}

optgroup {
  font-weight: bold;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

body,
button,
input,
select,
textarea {
  color: #111111;
  font-family: "Open Sans", sans-serif;
  line-height: 1.625;
}

p {
  margin: 0 0 1.5rem 0;
}

b,
strong {
  font-weight: 700;
}

dfn,
cite,
em,
i {
  font-style: italic;
}

blockquote,
q {
  margin: 0 1.5rem;
  quotes: "" "";
}

blockquote:before, blockquote:after,
q:before,
q:after {
  content: "";
}

address {
  margin: 0 0 1.5rem 0;
}

pre {
  font-family: "Courier 10 Pitch", Courier, monospace;
  font-size: 0.9375rem;
  line-height: 1.625;
  margin: 0 0 1.5rem;
  max-width: 100%;
  overflow: auto;
  padding: 1.5rem;
}

code,
kbd,
tt,
var {
  font-family: Monaco, Consolas, "Andale Mono", "DejaVu Sans Mono", monospace;
  font-size: 0.9375rem;
}

abbr,
acronym {
  border-bottom: 1px dotted #666666;
  cursor: help;
}

mark,
ins {
  text-decoration: none;
}

sup,
sub {
  font-size: 75%;
  height: 0;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  bottom: 1ex;
}

sub {
  top: .5ex;
}

small {
  font-size: 75%;
}

big {
  font-size: 125%;
}

.entry-title,
.entry-content,
.comments-title,
.comment-content,
.widget-title,
.widget {
  word-wrap: break-word;
  word-break: keep-all;
}

.screen-reader-text {
  height: auto;
  width: 1px;
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  overflow: hidden;
  position: absolute !important;
}

.screen-reader-text:hover, .screen-reader-text:active, .screen-reader-text:focus {
  height: auto;
  width: auto;
  background-color: #f1f1f1;
  border-radius: 3px;
  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
  clip: auto !important;
  color: #21759b;
  display: block;
  font-size: 0.875rem;
  font-weight: 700;
  left: 0.3125rem;
  line-height: normal;
  padding: 0.9375rem 1.4375rem 0.875rem;
  text-decoration: none;
  top: 0.3125rem;
  z-index: 100000;
}

.alignleft {
  display: inline;
  float: left;
  margin: 0 1.5rem 0 0;
}

.alignright {
  display: inline;
  float: right;
  margin: 0 0 0 1.5rem;
}

.aligncenter {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

.clear::after,
.entry-content::after,
.comment-content::after,
.site-header::after,
.site-content::after,
.site-footer::after {
  clear: both;
  content: "";
  display: table;
}

embed,
iframe,
object {
  max-width: 100%;
}

hr {
  height: 1px;
  width: auto;
  background-color: #cccccc;
  border: 0;
  margin: 0 0 1.5rem 0;
}

figure {
  margin: 0;
}

ul,
ol {
  margin: 0 0 3rem 1.5rem;
}

ul {
  list-style: disc;
}

ol {
  list-style: decimal;
}

li > ul,
li > ol {
  margin: 0 0 0 1.5rem;
}

dt {
  font-weight: 700;
}

dd {
  margin: 0 1.5rem 1.5rem 0;
}

table {
  height: auto;
  width: 100%;
  margin: 0 0 1.5rem 0;
}

th {
  font-weight: 700;
}

.page-content img.wp-smiley,
.entry-content img.wp-smiley,
.comment-content img.wp-smiley {
  margin: 0;
  padding: 0;
  border: none;
}

img {
  height: auto;
  max-width: 100%;
}

.wp-caption {
  margin: 0 0 1.5rem 0;
  max-width: 100%;
}

.wp-caption img[class*="wp-image-"] {
  display: block;
  margin: 0 auto;
}

.wp-caption.aligncenter {
  margin: 0 auto 1.5rem auto;
}

.wp-caption.alignleft {
  margin-right: 1.5rem;
}

.wp-caption.alignright {
  margin-left: 1.5rem;
}

.wp-caption .wp-caption-text {
  margin: 0.75rem 0;
}

.wp-caption-text {
  text-align: center;
}

.gallery {
  margin: 0 0 1.5rem 0;
}

.gallery-item {
  height: auto;
  width: 100%;
  display: inline-block;
  text-align: center;
  vertical-align: top;
}

.gallery-columns-2 .gallery-item {
  max-width: 50%;
}

.gallery-columns-3 .gallery-item {
  max-width: 33.33%;
}

.gallery-columns-4 .gallery-item {
  max-width: 25%;
}

.gallery-columns-5 .gallery-item {
  max-width: 20%;
}

.gallery-columns-6 .gallery-item {
  max-width: 16.66%;
}

.gallery-columns-7 .gallery-item {
  max-width: 14.28%;
}

.gallery-columns-8 .gallery-item {
  max-width: 12.5%;
}

.gallery-columns-9 .gallery-item {
  max-width: 11.11%;
}

.gallery-caption {
  display: block;
}

.svg-defs {
  display: none;
}

.fluid-embed {
  height: 0;
  overflow: hidden;
  padding-bottom: 56.25%;
  position: relative;
}

.fluid-embed blockquote,
.fluid-embed embed,
.fluid-embed object,
.fluid-embed iframe {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
}

/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
.not-ready {
  opacity: 0;
  transition: all 0.5s ease;
  visibility: hidden;
}

body.ready .not-ready {
  opacity: 1;
  visibility: visible;
}

.wrap {
  max-width: 85.375em;
  margin-left: auto;
  margin-right: auto;
  padding: 0 1.25em;
}

.wrap::after {
  clear: both;
  content: "";
  display: table;
}

.site-header,
.site-footer {
  padding: 0 1.25em;
}

.site-content {
  margin: 1.25rem auto;
}

.primary {
  width: 100%;
}

.secondary {
  width: 100%;
}

.site-title {
  font-size: 3rem;
}

.site-description {
  font-size: 1.5rem;
  margin: 0 0 1.5rem 0;
}

a {
  color: #21759b;
  text-decoration: none;
}

a:visited {
  color: #21759b;
}

a:hover, a:focus, a:active {
  color: #21759b;
}

.menu-toggle {
  display: block;
}

.menu-toggle .icon {
  height: 0.875rem;
  width: 0.75rem;
  display: inline-block;
  fill: #ffffff;
  margin-right: 0.3125rem;
  vertical-align: middle;
}

.menu-toggle .menu-toggle-text {
  display: inline-block;
  vertical-align: middle;
}

.main-navigation {
  height: auto;
  width: 100%;
  clear: both;
  display: block;
  float: left;
}

.main-navigation ul {
  display: none;
}

.main-navigation.toggled ul {
  display: block;
}

.menu {
  margin: 0;
  padding: 0;
  list-style: none;
}

.menu::after {
  clear: both;
  content: "";
  display: table;
}

.menu li {
  margin: 0 0.625rem 0 0;
}

.menu ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.menu ul::after {
  clear: both;
  content: "";
  display: table;
}

.menu.menu-horizontal li {
  display: inline-block;
}

.menu.menu-vertical li {
  margin: 0;
}

.menu.menu-vertical a {
  padding: 0.625rem;
  border-bottom: 1px solid #cccccc;
}

.menu.dropdown ul {
  box-shadow: 0 3px 3px rgba(0, 0, 0, 0.2);
  float: left;
  left: -999em;
  position: absolute;
  top: 1.5em;
  z-index: 99999;
}

.menu.dropdown ul ul {
  left: -999em;
  top: 0;
}

.menu.dropdown ul li:hover > ul,
.menu.dropdown ul li.focus > ul {
  left: 100%;
}

.menu.dropdown ul a {
  height: auto;
  width: 12.5rem;
}

.menu.dropdown li:hover > ul,
.menu.dropdown li.focus > ul {
  left: auto;
}

.menu.dropdown li {
  float: left;
  position: relative;
}

.menu a {
  display: block;
  text-decoration: none;
}

.site-main .comment-navigation, .site-main
.posts-navigation, .site-main
.post-navigation {
  margin: 0 0 1.5rem 0;
  overflow: hidden;
}

.comment-navigation .nav-previous,
.posts-navigation .nav-previous,
.post-navigation .nav-previous {
  height: auto;
  width: 50%;
  float: left;
}

.comment-navigation .nav-next,
.posts-navigation .nav-next,
.post-navigation .nav-next {
  height: auto;
  width: 50%;
  float: right;
  text-align: right;
}

.entry-title {
  font-size: 2.25rem;
}

.sticky {
  display: block;
}

.hentry {
  margin: 0 0 1.5rem 0;
}

.byline,
.updated:not(.published) {
  display: none;
}

.single .byline,
.group-blog .byline {
  display: inline;
}

.page-content,
.entry-content,
.entry-summary {
  margin: 1.5rem 0 0;
}

.page-links {
  margin: 0 0 1.5rem 0;
  clear: both;
}

.edit-link {
  margin: 0 1.5rem;
}

.blog .format-aside .entry-title,
.archive .format-aside .entry-title {
  display: none;
}

button,
input,
select,
textarea {
  font-size: 100%;
  margin: 0;
  vertical-align: baseline;
}

button,
input[type="button"],
input[type="reset"],
input[type="submit"] {
  background-color: #666666;
  border: none;
  border-radius: 0;
  color: #ffffff;
  min-height: 1.9375rem;
  vertical-align: top;
  -webkit-appearance: none;
}

button:hover,
input[type="button"]:hover,
input[type="reset"]:hover,
input[type="submit"]:hover {
  background-color: #333333;
}

button:active, button:focus,
input[type="button"]:active,
input[type="button"]:focus,
input[type="reset"]:active,
input[type="reset"]:focus,
input[type="submit"]:active,
input[type="submit"]:focus {
  background-color: #333333;
}

input[type="checkbox"],
input[type="radio"] {
  padding: 0;
}

input[type="text"]::-ms-clear,
input[type="search"]::-ms-clear {
  display: none;
}

input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box;
}

input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

input[type="text"],
input[type="email"],
input[type="url"],
input[type="password"],
input[type="search"],
input[type="tel"],
input[type="number"],
textarea {
  color: #666666;
  border: 1px solid #cccccc;
  border-radius: 0;
  line-height: 1.45;
  padding: 0.1875rem 0.3125rem;
  -webkit-appearance: none;
}

input[type="text"]:focus,
input[type="email"]:focus,
input[type="url"]:focus,
input[type="password"]:focus,
input[type="search"]:focus,
input[type="tel"]:focus,
input[type="number"]:focus,
textarea:focus {
  color: #111111;
}

textarea {
  height: auto;
  width: 100%;
  overflow: auto;
  vertical-align: top;
}

.comments-title {
  font-size: 1.5rem;
}

.comment-list {
  list-style: none;
  margin: 0;
}

.comment-meta {
  margin: 0 0 0.875rem 0;
}

.avatar {
  margin: 0 0.625rem 0 0;
  float: left;
}

.bypostauthor {
  display: block;
}

.social-icons {
  margin: 0 auto;
  padding: 0;
  text-align: center;
}

.social-icons .social-icon {
  display: inline-block;
  margin-right: 0.75rem;
  vertical-align: top;
}

.social-icons .social-icon .icon-facebook {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-facebook:hover {
  fill: #3b5998;
}

.social-icons .social-icon .icon-facebook-square {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-facebook-square:hover {
  fill: #3b5998;
}

.social-icons .social-icon .icon-googleplus {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-googleplus:hover {
  fill: #dd4b39;
}

.social-icons .social-icon .icon-googleplus-square {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-googleplus-square:hover {
  fill: #dd4b39;
}

.social-icons .social-icon .icon-instagram {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-instagram:hover {
  fill: #517fa4;
}

.social-icons .social-icon .icon-linkedin {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-linkedin:hover {
  fill: #007bb6;
}

.social-icons .social-icon .icon-linkedin-square {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-linkedin-square:hover {
  fill: #007bb6;
}

.social-icons .social-icon .icon-pinterest {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-pinterest:hover {
  fill: #cb2027;
}

.social-icons .social-icon .icon-pinterest-square {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-pinterest-square:hover {
  fill: #cb2027;
}

.social-icons .social-icon .icon-rss {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-rss:hover {
  fill: #ff9900;
}

.social-icons .social-icon .icon-rss-square {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-rss-square:hover {
  fill: #ff9900;
}

.social-icons .social-icon .icon-twitter {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-twitter:hover {
  fill: #00aced;
}

.social-icons .social-icon .icon-twitter-square {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-twitter-square:hover {
  fill: #00aced;
}

.social-icons .social-icon .icon-youtube {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-youtube:hover {
  fill: #bb0000;
}

.social-icons .social-icon .icon-youtube-square {
  height: 1.5rem;
  width: 1.5rem;
  fill: #ffffff;
}

.social-icons .social-icon .icon-youtube-square:hover {
  fill: #bb0000;
}

.social-icons .social-icon:last-child {
  margin-right: 0;
}

.accordion .accordion-trigger {
  transition: all 0.2s ease-in-out;
  background-color: #eeeeee;
  border: 1px solid #dddddd;
  border-radius: 0.3125rem;
  color: #333333;
  display: block;
  padding: 0.5625rem 0.5rem;
  position: relative;
  text-align: left;
  width: 100%;
}

.accordion .accordion-trigger:after {
  color: #333333;
  content: '+';
  display: block;
  font-size: 1.5rem;
  height: 1.5rem;
  margin-top: -1.125rem;
  position: absolute;
  right: 1.5625rem;
  top: 50%;
  width: 1.5rem;
}

.accordion .accordion-trigger:hover {
  background-color: #666666;
  border-color: #666666;
  color: #ffffff;
}

.accordion .accordion-trigger:hover:after {
  color: #ffffff;
}

.accordion .accordion-trigger.active {
  background-color: #333333;
  border-color: transparent;
  color: #ffffff;
}

.accordion .accordion-trigger.active:after {
  color: #ffffff;
  content: '-';
}

.accordion .accordion-content {
  display: none;
  overflow: hidden;
  padding: 0 0.625rem;
}

.accordion .accordion-container h1 {
  color: #333333;
  font-size: 1rem;
}

.accordion .accordion-container article {
  color: #000000;
  margin-bottom: 2.1875rem;
}

.no-js .accordion .accordion-trigger {
  border-color: #ffffff;
}

.no-js .accordion .accordion-trigger h1:after {
  display: none;
}

.no-js .accordion .accordion-content {
  display: block;
}

.chosen-form-standard .chosen-container {
  font-size: 1rem;
}

.chosen-form-standard .chosen-container .chosen-single,
.chosen-form-standard .chosen-container .chosen-drop {
  border: none;
  border-radius: 0;
  box-shadow: none;
}

.chosen-form-standard .chosen-container-active.chosen-with-drop .chosen-single,
.chosen-form-standard .chosen-container-active .chosen-choices {
  border: none;
  border-radius: 0;
  box-shadow: none;
}

.chosen-form-standard .chosen-container-active .chosen-results .highlighted {
  background: #21759b;
}

.chosen-form-multiple .chosen-container {
  font-size: 1rem;
}

.chosen-form-multiple .chosen-container .chosen-single,
.chosen-form-multiple .chosen-container .chosen-drop {
  border: none;
  border-radius: 0;
  box-shadow: none;
}

.chosen-form-multiple .chosen-container-active.chosen-with-drop .chosen-single,
.chosen-form-multiple .chosen-container-active .chosen-choices {
  border: none;
  border-radius: 0;
  box-shadow: none;
}

.chosen-form-multiple .chosen-container-active .chosen-results .highlighted {
  background: #21759b;
}

.expanding-search-form {
  display: inline-block;
  float: right;
  position: relative;
  width: 100%;
}

.expanding-search-form .search-field,
.expanding-search-form .search-submit {
  height: 3.75rem;
}

.expanding-search-form input[type="text"] {
  position: absolute;
  right: 0;
  transition: all 0.5s ease-in-out;
  background-color: rgba(221, 221, 221, 0.3);
  border: none;
  border-bottom: 1px solid rgba(0, 0, 0, 0.7);
  color: rgba(0, 0, 0, 0.7);
  cursor: pointer;
  font-size: 2.25rem;
  font-weight: 300;
  opacity: 0;
  padding-right: 3.75rem;
  width: 0;
  z-index: 3;
}

.expanding-search-form input[type="text"]:focus {
  cursor: text;
  opacity: 1;
  outline: none;
  width: 100%;
  z-index: 1;
}

.expanding-search-form input[type="text"]:hover ~ .search-submit .fa-search {
  color: #1a1a1a;
}

.expanding-search-form .search-submit {
  transition: all 0.2s ease-in-out;
  background-color: transparent;
  border: none;
  float: right;
  position: relative;
  width: auto;
  z-index: 2;
}

.expanding-search-form .search-submit:hover {
  background-color: #dddddd;
}

.expanding-search-form .icon-search {
  transition: all 0.2s ease-in-out;
  background: url("assets/images/svg-icons/search.svg") no-repeat center center;
  background-size: contain;
  display: block;
  height: 3.125rem;
  width: 3.125rem;
}

.expanding-search-form-modal {
  display: inline-block;
  float: right;
  position: relative;
  width: 100%;
}

.expanding-search-form-modal .search-field {
  height: 3.75rem;
}

.expanding-search-form-modal .search-submit {
  height: 7.5rem;
  width: 7.5rem;
}

.expanding-search-form-modal input[type="text"] {
  position: absolute;
  right: 0;
  height: auto;
  width: 25rem;
  transition: all 0.5s ease-in-out;
  background-color: rgba(221, 221, 221, 0.4);
  border: none;
  box-sizing: border-box;
  color: #666666;
  font-size: 2.25rem;
  font-weight: 300;
  padding: 0 7.875rem 0 1.25rem;
}

.expanding-search-form-modal input[type="text"]:focus {
  height: 7.5rem;
  width: 100%;
  background-color: rgba(221, 221, 221, 0.55);
  font-size: 4.5rem;
  outline: none;
  z-index: 2;
}

.expanding-search-form-modal input[type="text"]:focus ~ .search-submit {
  opacity: 1;
}

.expanding-search-form-modal .search-submit {
  transition: all 0.2s ease-in-out;
  background-color: transparent;
  border: none;
  float: right;
  opacity: 0;
  position: relative;
  z-index: 3;
}

.expanding-search-form-modal .icon-search {
  transition: all 0.2s ease-in-out;
  background: url("assets/images/svg-icons/search.svg") no-repeat center center;
  background-size: contain;
  display: block;
  height: 3.125rem;
  width: 3.125rem;
}

.expanding-search-form-modal .modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  transition: all 0.2s ease-in-out;
  background-color: #ffffff;
  height: 100vh;
  opacity: 0;
  width: 100%;
  z-index: -1;
}

.expanding-search-form-modal .search-field:focus ~ .modal-overlay {
  opacity: 0.85;
  z-index: 1;
}

.expanding-search-form-modal .close-modal {
  position: absolute;
  top: 0.9375rem;
  right: 1.5625rem;
  transition: all 0.2s ease-in-out;
  color: #cccccc;
  cursor: pointer;
  display: block;
}

.expanding-search-form-modal .icon-close {
  transition: all 0.2s ease-in-out;
  background: url("assets/images/svg-icons/close.svg") no-repeat center center;
  background-size: contain;
  display: block;
  height: 2.5rem;
  width: 2.5rem;
}

.cards {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.card {
  transition: all 0.2s ease-in-out;
  background-color: #eeeeee;
  border-radius: 3px;
  border: 1px solid #dddddd;
  cursor: pointer;
  -webkit-flex: 1 1 15rem;
      -ms-flex: 1 1 15rem;
          flex: 1 1 15rem;
  margin: 0 1rem 1.5rem 1rem;
  position: relative;
}

.card .card-image {
  background-color: #21759b;
  height: 9.375rem;
  max-height: 9.375rem;
  overflow: hidden;
}

.card .card-image img {
  transition: opacity 0.2s ease-in-out;
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
  opacity: 1;
}

.card .card-header {
  transition: all 0.2s ease-in-out;
  background-color: #eeeeee;
  border-bottom: 1px solid #dddddd;
  border-radius: 3px 3px 0 0;
  font-weight: 700;
  padding: 0.5rem 0.75rem;
}

.card .card-copy {
  padding: 0.75rem 0.75rem;
}

.card .card-copy p {
  margin: 0 0 0.75rem;
}

.card:focus, .card:hover {
  cursor: pointer;
}

.card:focus img, .card:hover img {
  opacity: 0.7;
}

.card:active {
  background-color: #eeeeee;
}

.card:active .card-header {
  background-color: #eeeeee;
}

.grid-area.flexbox-grid {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.grid-area.flexbox-grid::after {
  clear: both;
  content: "";
  display: table;
}

.grid-area.flexbox-grid a,
.grid-area.flexbox-grid a:visited {
  color: #000000;
}

.grid-area.flexbox-grid a:focus .grid-item-title,
.grid-area.flexbox-grid a:hover .grid-item-title {
  color: #21759b;
}

.grid-area.flexbox-grid .grid-item {
  margin: 0.25rem;
  padding: 2rem 2rem 3rem;
  background-color: #eeeeee;
  -webkit-flex: 2 2 15rem;
      -ms-flex: 2 2 15rem;
          flex: 2 2 15rem;
  text-decoration: none;
}

.grid-area.flexbox-grid .grid-item .grid-item-title {
  transition: color 0.5s ease-in-out;
  margin-bottom: 0.5rem;
}

.grid-area.flexbox-grid .grid-item .grid-item-copy {
  margin: auto;
}

.grid-area.flexbox-grid .grid-item.full-width {
  box-flex: 1;
  -webkit-flex: 1 1 40rem;
  -moz-flex: 1 1 40rem;
  -ms-flex: 1 1 40rem;
  flex: 1 1 40rem;
}

.main-navigation {
  background-color: #000000;
}

.menu.flex-menu {
  margin: 0;
  padding: 0;
  list-style: none;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
}

.menu.flex-menu::after {
  clear: both;
  content: "";
  display: table;
}

.menu.flex-menu .menu-item {
  position: relative;
}

.menu.flex-menu .menu-item:hover > a,
.menu.flex-menu .menu-item.focus > a {
  background-color: #666666;
}

.menu.flex-menu ul {
  margin: 0;
  padding: 0;
  list-style: none;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-flex-basis: content;
      -ms-flex-preferred-size: content;
          flex-basis: content;
  left: 624.9375rem;
  position: absolute;
  top: 3.125rem;
}

.menu.flex-menu ul::after {
  clear: both;
  content: "";
  display: table;
}

.menu.flex-menu ul .menu-item:hover > ul,
.menu.flex-menu ul .menu-item.focus > ul {
  left: 100%;
}

.menu.flex-menu ul :hover > a,
.menu.flex-menu ul .focus > a {
  background-color: #000000;
  color: #ffffff;
}

.menu.flex-menu a {
  -webkit-align-items: flex-start;
      -ms-flex-align: start;
          align-items: flex-start;
  color: #ffffff;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 0.75rem 1.5rem;
  text-decoration: none;
}

.menu.flex-menu .current_page_item a,
.menu.flex-menu .current-menu-item a {
  background-color: #ffffff;
}

.menu.flex-menu li:hover > ul,
.menu.flex-menu li.focus > ul {
  background: #666666;
  left: auto;
  width: 12.5rem;
  z-index: 999999;
}

.generic-form .col {
  float: left;
  margin-right: 4%;
  width: 48%;
}

.generic-form .col:nth-of-type(2n) {
  margin-right: 0;
}

.generic-form .col input {
  width: 100%;
}

.generic-form fieldset {
  margin: 0;
}

.generic-form .inline-inputs input {
  display: inline-block;
  width: auto;
}

.generic-form .inline-inputs label {
  margin-right: 2%;
}

.generic-form .required {
  color: #ff0000;
}

.generic-form button,
.generic-form input[type="submit"] {
  clear: both;
  display: block;
}

.hero-featured-device {
  padding-top: 7.5rem;
}

.hero-featured-device .hero-background {
  background: linear-gradient(30deg, #000000, #ffffff), no-repeat;
  background-repeat: no-repeat;
  background-size: cover;
  min-height: 20rem;
  width: 100%;
}

.hero-featured-device .hero-background .hero-text {
  padding: 2rem;
}

.hero-featured-device .hero-background .hero-text h4 {
  border-bottom: 1px solid rgba(255, 255, 255, 0.3);
  color: #ffffff;
  font-size: 1.5rem;
  margin: 0 0 0.5rem 0;
  padding-bottom: 0.5rem;
}

.hero-featured-device .hero-background .hero-text p {
  color: #ffffff;
  line-height: 1.5rem;
  margin-bottom: 1.5rem;
}

.hero-featured-device .hero-background .hero-device {
  display: none;
  position: relative;
}

.hero-slanted-clip-path {
  background: url(http://lorempixel.com/800/350/nature);
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
  -webkit-clip-path: polygon(0 0, 1600px 0, 1600px 50%, 0 100%);
          clip-path: polygon(0 0, 1600px 0, 1600px 50%, 0 100%);
  padding: 6.25rem 1.25rem;
  text-align: center;
}

.hero-slanted-clip-path h1 {
  font-size: 2rem;
}

.hover-tile-outer {
  background: url(http://lorempixel.com/700/300/nature) 50% 50% no-repeat #808080;
  background-size: cover;
  height: 18.75rem;
  overflow: hidden;
}

.hover-tile {
  height: inherit;
}

.hover-tile-hidden {
  background-color: rgba(33, 117, 155, 0.2);
  color: #ffffff;
}

.hover-tile-container {
  height: 100%;
}

.hover-tile-container:hover .hover-tile {
  -webkit-transform: translate(0, 0);
  transform: translate(0, 0);
}

.from-bottom .hover-tile-container:hover .hover-tile {
  -webkit-transform: translate(0, -100%);
  transform: translate(0, -100%);
}

.from-right .hover-tile-container:hover .hover-tile-visible {
  -webkit-transform: translate(-100%, 0);
  transform: translate(-100%, 0);
}

.from-right .hover-tile-container:hover .hover-tile-hidden {
  -webkit-transform: translate(0, -100%);
  transform: translate(0, -100%);
}

.hover-tile-hidden,
.hover-tile-visible {
  transition: all, 0.2s ease-in-out;
  overflow: hidden;
  padding: 0.9375rem;
}

.from-top .hover-tile {
  -webkit-transform: translate(0, -100%);
  transform: translate(0, -100%);
}

.from-left .hover-tile {
  -webkit-transform: translate(-100%, 0);
  transform: translate(-100%, 0);
}

.from-right .hover-tile-visible {
  -webkit-transform: translate(0, 0);
  transform: translate(0, 0);
}

.from-right .hover-tile-hidden {
  -webkit-transform: translate(100%, -100%);
  transform: translate(100%, -100%);
}

.from-bottom .hover-tile {
  -webkit-transform: translate(0, 100%);
  transform: translate(0, 100%);
}

.hover-tile-section {
  float: left;
  display: block;
  margin-right: 0.74294%;
  width: 49.62853%;
}

.hover-tile-section:last-child {
  margin-right: 0;
}

.hover-tile-section:nth-child(2n) {
  margin-right: 0;
}

.hover-tile-section:nth-child(2n+1) {
  clear: left;
}

/** Mobile Navigation **/
.mobile-menu-more {
  overflow: hidden;
}

.mobile-nav-menu {
  display: block;
  height: 100%;
  left: 0;
  position: fixed;
  top: 0;
  transition: all 0.5s ease;
  width: 0;
}

.mobile-nav-menu a {
  color: #ffffff;
}

.mobile-nav-menu.more,
.mobile-nav-menu .sub-menu {
  transition: all 0.5s ease;
  width: 100%;
}

.mobile-nav-menu.more {
  background-color: rgba(0, 0, 0, 0.7);
  padding-top: 1.5625rem;
}

.admin-bar .mobile-nav-menu {
  padding-top: 3.5rem;
}

.mobile-nav-menu li {
  cursor: pointer;
}

.mobile-nav-menu > div {
  bottom: 5.25rem;
  position: absolute;
  right: 0;
  width: 50vw;
}

.mobile-nav-menu .mobile-nav > li {
  margin: 0;
}

.mobile-nav-menu .mobile-nav > li a {
  padding: 0 0.625rem;
}

.mobile-nav-menu .mobile-nav > li:nth-child(-n+5) {
  background-color: #000000;
  border-top: 1px solid #808080;
  bottom: 0;
  height: 4rem;
  left: 0;
  position: fixed;
  text-align: center;
  transition: all 0.5s ease;
  width: 20%;
}

.mobile-nav-menu .mobile-nav > li:nth-child(-n+5):hover {
  background-color: #666666;
  transition: all 0.5s ease;
}

.mobile-nav-menu .mobile-nav > li:nth-child(-n+5) > a {
  display: block;
  font-size: 0.75rem;
  height: 100%;
  line-height: 1.2;
}

.mobile-nav-menu .mobile-nav > li:nth-child(-n+5) > a span {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  -webkit-transform: translateY(-50%);
  display: block;
}

.mobile-nav-menu .mobile-nav > li:nth-child(2) {
  left: 20%;
}

.mobile-nav-menu .mobile-nav > li:nth-child(3) {
  left: 40%;
}

.mobile-nav-menu .mobile-nav > li:nth-child(4) {
  left: 60%;
}

.mobile-nav-menu .mobile-nav > li:nth-child(5) {
  left: 80%;
}

.mobile-nav-menu .mobile-nav > li:nth-child(n+6) {
  display: none;
}

.mobile-nav-menu.more .mobile-nav > li:nth-child(n+6) {
  bottom: 0;
  clear: both;
  display: block;
  float: right;
  position: relative;
  right: 0;
  width: 100%;
}

.mobile-nav-menu.more .mobile-nav > li:nth-child(n+6) .sub-menu {
  opacity: 1;
}

.sub-menu-more .mobile-nav-menu.more .mobile-nav > li:nth-child(n+6) {
  display: none;
}

.mobile-nav-menu.more .mobile-nav > li:nth-child(n+6) a {
  color: #ffffff;
  padding: 0.625rem 1.25rem;
}

.mobile-nav-menu .mobile-nav ul.mobile-nav-menu-more,
.mobile-nav-menu .mobile-nav > .sub-menu {
  background-color: #808080;
  left: 0;
  height: 100vh;
  position: absolute;
  top: 0;
}

.mobile-nav-menu .mobile-nav ul {
  box-shadow: none;
}

.mobile-menu-more:not(.sub-menu-more) .mobile-nav-menu .mobile-nav ul {
  top: 0;
}

.close-mobile-menu {
  height: 2rem;
  width: 2rem;
  background-color: transparent;
  border: none;
  display: none;
  position: absolute;
  right: 0.75rem;
  top: 0.625rem;
  z-index: 1;
}

.close-mobile-menu:before {
  height: 1.5rem;
  width: auto;
  position: relative;
  top: 50%;
  transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  -webkit-transform: translateY(-50%);
  color: #ffffff;
  content: 'x';
  display: block;
  font-size: 1.5rem;
  line-height: 1.75;
}

.admin-bar .close-mobile-menu {
  top: 3.5rem;
}

.close-mobile-menu:hover, .close-mobile-menu:active, .close-mobile-menu:focus {
  background-color: transparent;
}

.close-mobile-menu:hover svg, .close-mobile-menu:active svg, .close-mobile-menu:focus svg {
  opacity: .6;
  transition: all 0.5s ease;
}

.more .close-mobile-menu {
  display: block;
}

.close-mobile-menu svg {
  height: 100%;
  width: 100%;
  fill: #ffffff;
  transition: all 0.5s ease;
}

.mobile-nav.dropdown .menu-item-has-children:hover .sub-menu {
  display: none;
}

.mobile-menu-more:not(.sub-menu-more) .mobile-nav.dropdown .menu-item-has-children:hover .sub-menu {
  display: block;
  left: auto;
  opacity: 1;
  right: 0;
}

.mobile-nav.dropdown .visible .sub-menu,
.mobile-nav.dropdown .visible:hover .sub-menu,
.mobile-nav.dropdown .visible:focus .sub-menu,
.mobile-nav.dropdown .visible:active .sub-menu {
  bottom: 5.25rem;
  display: block;
  left: auto;
  opacity: 1;
  position: fixed;
  right: 0;
  top: auto;
}

.mobile-nav.dropdown .visible .sub-menu .sub-menu,
.mobile-nav.dropdown .visible:hover .sub-menu .sub-menu,
.mobile-nav.dropdown .visible:focus .sub-menu .sub-menu,
.mobile-nav.dropdown .visible:active .sub-menu .sub-menu {
  bottom: 0;
}

.mobile-nav.dropdown .visible .sub-menu .sub-menu,
.mobile-nav.dropdown .visible:hover .sub-menu .sub-menu,
.mobile-nav.dropdown .visible:focus .sub-menu .sub-menu,
.mobile-nav.dropdown .visible:active .sub-menu .sub-menu {
  padding-left: 0.625rem;
  position: relative;
}

.mobile-nav.dropdown .sub-menu {
  left: 0;
  opacity: 0;
  z-index: -1;
  width: 50vw;
}

.mobile-nav.dropdown .sub-menu a {
  color: #ffffff;
  font-size: 1rem;
  padding: 0.625rem 1.25rem;
  text-align: left;
}

.mobile-nav.dropdown .sub-menu li {
  display: block;
  width: 100%;
}

.mobile-nav > li:nth-child(n+6) .sub-menu {
  display: block;
  left: 0;
  padding-left: 0.625rem;
  position: relative;
}

.no-js.admin-bar .mobile-nav-menu {
  padding-top: 0;
}

.no-js .mobile-nav-menu {
  bottom: 0;
  font-size: 0;
  height: 4rem;
  overflow-x: auto;
  top: auto;
  -webkit-overflow-scrolling: touch;
  -ms-overflow-style: -ms-autohiding-scrollbar;
  white-space: nowrap;
  width: 100%;
}

.no-js .mobile-nav-menu > div:before, .no-js .mobile-nav-menu > div:after {
  position: fixed;
  bottom: 0;
  height: 100%;
  width: 25%;
  content: "";
  pointer-events: none;
  /* so the text is still selectable */
  z-index: 20;
}

.no-js .mobile-nav-menu > div:after {
  right: 0;
  background: linear-gradient(to left, white 0%, rgba(255, 255, 255, 0) 100%);
}

.no-js .mobile-nav-menu > div:before {
  left: 0;
  background: linear-gradient(to left, rgba(255, 255, 255, 0) 0%, white 100%);
}

.no-js .mobile-nav-menu .mobile-nav a {
  padding: 0 0.625rem;
  text-align: center;
}

.no-js .mobile-nav-menu .mobile-nav a span {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  -webkit-transform: translateY(-50%);
  display: block;
}

.no-js .mobile-nav-menu .mobile-nav > li:nth-child(n+6) {
  display: inline-block;
}

.no-js .mobile-nav-menu .mobile-nav > li:first-of-type {
  padding-left: 3.125rem;
}

.no-js .mobile-nav-menu .mobile-nav > li:last-of-type {
  padding-right: 3.125rem;
}

.no-js .mobile-nav-menu .mobile-nav li {
  background-color: #ffffff;
  border-top: 1px solid rgba(0, 0, 0, 0.1);
  display: inline-block;
  float: none;
  font-size: 0.75rem;
  height: 4rem;
  left: 0;
  margin: 0;
  position: relative;
  text-align: center;
  vertical-align: top;
  width: auto;
}

.no-js .mobile-nav-menu .mobile-nav li > a {
  display: block;
  font-size: 0.75rem;
  height: 100%;
  line-height: 1.2;
}

.no-js .mobile-nav-menu .mobile-nav li.menu-item-has-children > a {
  display: inline-block;
  vertical-align: top;
}

.no-js .mobile-nav-menu .mobile-nav li.menu-item-has-children:hover .sub-menu {
  display: inline-block;
  left: 0;
}

.no-js .mobile-nav-menu .sub-menu {
  display: inline-block;
  float: none;
  left: 0;
  opacity: 1;
  position: relative;
  top: auto;
  width: auto;
  z-index: 1;
}

.no-js .mobile-nav-menu .sub-menu a {
  color: #21759b;
}

.no-js .mobile-nav-menu .sub-menu li {
  border: none;
}

.no-js .mobile-nav-menu .menu.dropdown ul a {
  width: auto;
}

.menu.nav-with-submenus {
  background-color: #000000;
  display: table;
  width: 100%;
}

.menu.nav-with-submenus > li {
  display: table-cell;
  text-align: center;
}

.menu.nav-with-submenus > li:hover > a, .menu.nav-with-submenus > li:focus > a {
  background-color: #21759b;
}

.menu.nav-with-submenus a {
  transition: color 0.2s, background-color 0.2s ease-in-out;
  color: #ffffff;
  display: block;
  padding: 0.9375rem;
  word-wrap: break-word;
}

.menu.nav-with-submenus a:hover {
  color: #e6e6e6;
  text-decoration: none;
}

.menu.nav-with-submenus .menu-item-has-children {
  position: relative;
}

.menu.nav-with-submenus .menu-item-has-children:hover > .sub-menu {
  display: block;
}

.menu.nav-with-submenus .menu-item-has-children a:after {
  height: 0;
  width: 0;
  border-left: 7px solid transparent;
  border-right: 7px solid transparent;
  border-top: 7px solid #ffffff;
  content: '';
  height: 0.75rem;
  margin: -0.125rem 0 0 0.375rem;
  position: absolute;
  top: 50%;
}

.menu.nav-with-submenus .sub-menu {
  background-color: #000000;
  display: none;
  position: absolute;
  width: 100%;
}

.active .menu.nav-with-submenus .sub-menu {
  display: block;
}

.menu.nav-with-submenus .sub-menu li {
  display: block;
  width: 100%;
}

.menu.nav-with-submenus .sub-menu .sub-menu {
  display: none;
  left: 100%;
  top: 0;
}

.menu.nav-with-submenus .sub-menu .active > .sub-menu {
  display: block;
}

.menu.nav-with-submenus > li:last-child.menu-item-has-children .sub-menu .sub-menu {
  left: auto;
  right: 100%;
}

.grid-area.non-flexbox-grid {
  max-width: 85.375em;
  margin-left: auto;
  margin-right: auto;
}

.grid-area.non-flexbox-grid::after {
  clear: both;
  content: "";
  display: table;
}

.grid-area.non-flexbox-grid::after {
  clear: both;
  content: "";
  display: table;
}

.grid-area.non-flexbox-grid .grid-item {
  transition: all 0.2s ease-in-out;
  background: #eeeeee;
  border-bottom: 5px solid #808080;
  cursor: pointer;
  float: left;
  outline: none;
  overflow: hidden;
  margin-bottom: 2rem;
  padding: 1rem;
}

.grid-area.non-flexbox-grid .grid-item a:focus .grid-item-title,
.grid-area.non-flexbox-grid .grid-item a:hover .grid-item-title {
  color: #21759b;
}

.grid-area.non-flexbox-grid .grid-item .grid-item-title {
  transition: color 0.5s ease-in-out;
  color: #000000;
  margin-bottom: 0.4375rem;
}

.grid-area.non-flexbox-grid .grid-item .grid-item-copy {
  color: #000000;
}

.pagination {
  text-align: center;
}

.pagination ul {
  display: inline;
  margin: 0;
  padding: 0;
  text-align: center;
}

.pagination ul li {
  display: inline;
  list-style: none;
}

.pagination ul ul li {
  display: none;
}

.pagination ul ul li:nth-child(1), .pagination ul ul li:nth-child(2), .pagination ul ul li:nth-child(3) {
  display: inline;
}

.pagination ul li a {
  transition: all 0.2s ease-in-out;
  background: #dddddd;
  border-radius: 0.1875rem;
  color: #000000;
  outline: none;
  padding: 0.3125rem 0.3125em;
  text-decoration: none;
}

.pagination ul li a:hover, .pagination ul li a:focus {
  background: black;
  color: #dddddd;
}

.pagination ul li a:active {
  background: #dddddd;
}

.parallax {
  background-attachment: fixed;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: cover;
  height: 37.5rem;
  margin-bottom: 1.25rem;
}

.parallax .container {
  color: #000000;
  padding: 2.5rem;
  height: 100%;
}

.parallax h1 {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  -webkit-transform: translateY(-50%);
  color: rgba(255, 255, 255, 0.8);
  font-size: 3rem;
  font-weight: 700;
  text-align: center;
  text-transform: uppercase;
  text-shadow: 0 0 0.625rem rgba(0, 0, 0, 0.2);
}

.parallax h2 {
  font-size: 1.875rem;
  margin-bottom: 0;
}

.parallax-1 {
  background-image: url("http://lorempixel.com/1200/480/abstract");
}

.parallax-2 {
  background-image: url("http://lorempixel.com/1300/480/abstract");
}

.parallax-3 {
  background-image: url("http://lorempixel.com/1400/480/abstract");
}

@-webkit-keyframes animation-lightspeed-in {
  0% {
    opacity: 0;
    -webkit-transform: translateY(-200%);
            transform: translateY(-200%);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

@keyframes animation-lightspeed-in {
  0% {
    opacity: 0;
    -webkit-transform: translateY(-200%);
            transform: translateY(-200%);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

.chart-wrapper {
  margin: 0 auto;
  max-width: 37.5rem;
}

.chart-vertical {
  margin: 0;
  padding: 0;
  list-style: none;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 300px;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  overflow: hidden;
}

.chart-vertical::after {
  clear: both;
  content: "";
  display: table;
}

.chart-vertical .chart-bar {
  -webkit-animation: 1s animation-lightspeed-in ease forwards;
          animation: 1s animation-lightspeed-in ease forwards;
  background: #21759b;
  list-style: none;
  margin-right: 0.25rem;
  opacity: 0;
  width: 100%;
}

.chart-vertical .chart-bar:nth-of-type(10) {
  -webkit-animation-delay: 3s;
          animation-delay: 3s;
}

.chart-vertical .chart-bar:nth-of-type(9) {
  -webkit-animation-delay: 2.7s;
          animation-delay: 2.7s;
}

.chart-vertical .chart-bar:nth-of-type(8) {
  -webkit-animation-delay: 2.4s;
          animation-delay: 2.4s;
}

.chart-vertical .chart-bar:nth-of-type(7) {
  -webkit-animation-delay: 2.1s;
          animation-delay: 2.1s;
}

.chart-vertical .chart-bar:nth-of-type(6) {
  -webkit-animation-delay: 1.8s;
          animation-delay: 1.8s;
}

.chart-vertical .chart-bar:nth-of-type(5) {
  -webkit-animation-delay: 1.5s;
          animation-delay: 1.5s;
}

.chart-vertical .chart-bar:nth-of-type(4) {
  -webkit-animation-delay: 1.2s;
          animation-delay: 1.2s;
}

.chart-vertical .chart-bar:nth-of-type(3) {
  -webkit-animation-delay: 0.9s;
          animation-delay: 0.9s;
}

.chart-vertical .chart-bar:nth-of-type(2) {
  -webkit-animation-delay: 0.6s;
          animation-delay: 0.6s;
}

.chart-vertical .chart-bar:nth-of-type(1) {
  -webkit-animation-delay: 0.3s;
          animation-delay: 0.3s;
}

.chart-vertical .chart-bar[data-skill="10"] {
  height: 10%;
}

.chart-vertical .chart-bar[data-skill="20"] {
  height: 20%;
}

.chart-vertical .chart-bar[data-skill="30"] {
  height: 30%;
}

.chart-vertical .chart-bar[data-skill="40"] {
  height: 40%;
}

.chart-vertical .chart-bar[data-skill="50"] {
  height: 50%;
}

.chart-vertical .chart-bar[data-skill="60"] {
  height: 60%;
}

.chart-vertical .chart-bar[data-skill="70"] {
  height: 70%;
}

.chart-vertical .chart-bar[data-skill="80"] {
  height: 80%;
}

.chart-vertical .chart-bar[data-skill="90"] {
  height: 90%;
}

.chart-vertical .chart-bar[data-skill="100"] {
  height: 100%;
}

.block-item {
  width: 100%;
  color: #000000;
  float: none;
  margin-bottom: 2.1875rem;
  text-align: center;
}

.block-item h1 {
  margin: 0;
}

.block-item img {
  border-radius: 100%;
}

.view-radio {
  display: none;
}

.view-radio + label {
  color: #000000;
  cursor: pointer;
  display: inline-block;
  font-size: 1.5rem;
  font-weight: 600;
  margin: 0 2.1875rem 2.1875rem 0;
}

.view-radio + label:hover {
  color: #21759b;
}

.view-radio:checked + label {
  color: #21759b;
}

.list-view-radio:checked ~ .content-container .block-item {
  width: 100%;
  margin-right: 0;
  text-align: left;
}

.list-view-radio:checked ~ .content-container .block-item img {
  height: 4rem;
  width: 4rem;
  float: left;
  margin-right: 0.9375rem;
}

.list-view-radio:checked ~ .content-container .block-item .entry-content {
  overflow: hidden;
}

.infinite-scroll .posts-navigation,
.infinite-scroll.neverending .site-footer {
  display: none;
}

.infinity-end.neverending .site-footer {
  display: block;
}

.widget {
  margin: 0 0 1.5rem;
}

.widget select {
  max-width: 100%;
}

.widget_search .search-submit {
  display: none;
}

@media screen and (min-width: 40rem) {
  .menu-toggle {
    display: none;
  }
  .main-navigation ul {
    display: block;
  }
  .grid-area.non-flexbox-grid .grid-item {
    float: left;
    display: block;
    margin-right: 0.74294%;
    width: 49.62853%;
  }
  .grid-area.non-flexbox-grid .grid-item:last-child {
    margin-right: 0;
  }
  .grid-area.non-flexbox-grid .grid-item:nth-child(2n) {
    margin-right: 0;
  }
  .grid-area.non-flexbox-grid .grid-item:nth-child(2n+1) {
    clear: left;
  }
  .block-item {
    float: left;
    display: block;
    margin-right: 0.74294%;
    width: 49.62853%;
  }
  .block-item:last-child {
    margin-right: 0;
  }
  .block-item:nth-child(2n) {
    margin-right: 0;
  }
  .block-item:nth-child(2n+1) {
    clear: left;
  }
}

@media screen and (min-width: 48rem) {
  .hero-featured-device .hero-background .hero-text {
    float: left;
    max-width: 50%;
    padding: 4rem;
  }
  .hero-featured-device .hero-background .hero-device {
    -webkit-transform: perspective(800px) translateX(0px) translateY(-100px) translateZ(50px) rotateX(0deg) rotateY(-20deg) rotateZ(0deg);
    transform: perspective(800px) translateX(0px) translateY(-100px) translateZ(50px) rotateX(0deg) rotateY(-20deg) rotateZ(0deg);
    background: #111111;
    border-radius: 2rem;
    box-shadow: 1px 0px #333333, 4px 0px #161616, 7px 0px #000000, 10px 0px #000000, 13px 0px #000000;
    display: block;
    float: right;
    margin-bottom: -12rem;
    margin-right: 5rem;
    padding: 5rem 0;
    width: 14.75rem;
    z-index: 99999;
  }
  .hero-featured-device .hero-background .hero-device .screen {
    height: 25rem;
    width: 14rem;
    background-image: url("https://s3-us-west-2.amazonaws.com/s.cdpn.io/476573/wds.png");
    background-position-x: -1rem;
    background-size: cover;
    border-radius: 0.1875rem;
    box-shadow: inset 0 1px 8px rgba(0, 0, 0, 0.5);
    margin: auto;
  }
  .mobile-nav-menu > div {
    bottom: auto;
    left: 0;
    right: auto;
    top: 0;
    width: 100%;
  }
  .mobile-nav.dropdown .visible .sub-menu,
  .mobile-nav.dropdown .visible:hover .sub-menu,
  .mobile-nav.dropdown .visible:focus .sub-menu,
  .mobile-nav.dropdown .visible:active .sub-menu {
    bottom: auto;
    left: 0;
    right: auto;
    top: 0;
  }
  .mobile-nav.dropdown .visible .sub-menu .sub-menu,
  .mobile-nav.dropdown .visible:hover .sub-menu .sub-menu,
  .mobile-nav.dropdown .visible:focus .sub-menu .sub-menu,
  .mobile-nav.dropdown .visible:active .sub-menu .sub-menu {
    bottom: auto;
  }
  .mobile-nav.dropdown .sub-menu {
    left: auto;
    right: 0;
    width: 100%;
  }
  .pagination ul ul li {
    display: inline;
  }
  .list-view-radio:checked ~ .content-container .block-item {
    min-height: 18.75rem;
  }
  .list-view-radio:checked ~ .content-container .block-item img {
    height: 18.75rem;
    width: 18.75rem;
  }
}

@media screen and (min-width: 48.9375rem) {
  .admin-bar .mobile-nav-menu {
    padding-top: 2.5rem;
  }
  .admin-bar .close-mobile-menu {
    top: 2.5rem;
  }
}

@media screen and (min-width: 64rem) {
  .primary {
    float: left;
    display: block;
    margin-right: 0.74294%;
    width: 66.41902%;
  }
  .primary:last-child {
    margin-right: 0;
  }
  .secondary {
    float: left;
    display: block;
    margin-right: 0.74294%;
    width: 32.83804%;
  }
  .secondary:last-child {
    margin-right: 0;
  }
  .social-icons {
    float: left;
    text-align: left;
  }
  .grid-area.non-flexbox-grid .grid-item {
    float: left;
    display: block;
    margin-right: 0.74294%;
    width: 24.44279%;
  }
  .grid-area.non-flexbox-grid .grid-item:nth-child(2n) {
    margin-right: 0.74294%;
  }
  .grid-area.non-flexbox-grid .grid-item:nth-child(2n+1) {
    clear: none;
  }
  .grid-area.non-flexbox-grid .grid-item:last-child {
    margin-right: 0;
  }
  .grid-area.non-flexbox-grid .grid-item:nth-child(4n) {
    margin-right: 0;
  }
  .grid-area.non-flexbox-grid .grid-item:nth-child(4n+1) {
    clear: left;
  }
  .block-item {
    float: left;
    display: block;
    margin-right: 0.74294%;
    width: 32.83804%;
  }
  .block-item:last-child {
    margin-right: 0;
  }
  .block-item:nth-child(2n) {
    margin-right: 0.74294%;
  }
  .block-item:nth-child(2n+1) {
    clear: none;
  }
  .block-item:nth-child(3n) {
    margin-right: 0;
  }
  .block-item:nth-child(3n+1) {
    clear: left;
  }
}

@media screen and (min-width: 85.375rem) {
  .wrap {
    padding: 0;
  }
  .site-content {
    margin: 2.5rem auto 3.75rem;
  }
}

/*# sourceMappingURL=data:application/json;base64, */
